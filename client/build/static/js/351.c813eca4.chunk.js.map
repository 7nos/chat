{"version":3,"file":"static/js/351.c813eca4.chunk.js","mappings":"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","sources":["components/AuthPage.js","services/api.js"],"sourcesContent":["// client/src/components/AuthPage.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { signinUser, signupUser } from '../services/api';\nimport './AuthPage.css'; // Import the new CSS file\n\nconst AuthPage = ({ setIsAuthenticated }) => {\n    const [isLogin, setIsLogin] = useState(true);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n    const navigate = useNavigate();\n\n    const handleAuth = async (e) => {\n        e.preventDefault();\n        setError(''); setLoading(true);\n\n        if (!username.trim() || !password.trim()) {\n            setError('Username and password cannot be empty.');\n            setLoading(false); return;\n        }\n\n        try {\n            let response;\n            const userData = { username, password };\n            if (isLogin) {\n                response = await signinUser(userData);\n            } else {\n                 if (password.length < 6) {\n                     setError('Password must be at least 6 characters long.');\n                     setLoading(false); return;\n                 }\n                response = await signupUser(userData);\n            }\n\n            const { sessionId, username: loggedInUsername, _id: userId } = response.data;\n\n            if (!userId || !sessionId || !loggedInUsername) {\n                 throw new Error(\"Incomplete authentication data received from server.\");\n            }\n\n            // Store user info in localStorage\n            localStorage.setItem('sessionId', sessionId);\n            localStorage.setItem('username', loggedInUsername);\n            localStorage.setItem('userId', userId); // Store userId\n\n            setIsAuthenticated(true); // Update App state\n            navigate('/chat', { replace: true }); // Redirect to chat page\n\n        } catch (err) {\n            const errorMessage = err.response?.data?.message || err.message || `An error occurred during ${isLogin ? 'sign in' : 'sign up'}.`;\n            setError(errorMessage);\n            console.error(\"Auth Error:\", err.response || err);\n            // Clear potentially invalid items on auth error\n            localStorage.removeItem('sessionId');\n            localStorage.removeItem('username');\n            localStorage.removeItem('userId');\n            setIsAuthenticated(false);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const toggleMode = () => {\n        setIsLogin(!isLogin);\n        setUsername(''); setPassword(''); setError('');\n    };\n\n    return (\n        <div className=\"auth-container\">\n            <div className=\"auth-box\">\n                <h2>{isLogin ? 'Sign In' : 'Sign Up'}</h2>\n                <form onSubmit={handleAuth}>\n                    <div className=\"input-group\">\n                        <label htmlFor=\"username\">Username</label>\n                        <input\n                            type=\"text\" id=\"username\" value={username}\n                            onChange={(e) => setUsername(e.target.value)}\n                            required autoComplete=\"username\"\n                            disabled={loading}\n                        />\n                    </div>\n                    <div className=\"input-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                            type=\"password\" id=\"password\" value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            required autoComplete={isLogin ? \"current-password\" : \"new-password\"}\n                            disabled={loading}\n                        />\n                    </div>\n                    {error && <p className=\"error-message\">{error}</p>}\n                    <button type=\"submit\" disabled={loading} className=\"auth-button\">\n                        {loading ? 'Processing...' : (isLogin ? 'Sign In' : 'Sign Up')}\n                    </button>\n                </form>\n                <button onClick={toggleMode} className=\"toggle-button\" disabled={loading}>\n                    {isLogin ? 'Need an account? Sign Up' : 'Have an account? Sign In'}\n                </button>\n            </div>\n        </div>\n    );\n};\n\n// Remove inline CSS and injection logic\n// --- CSS for AuthPage (included directly) ---\n/*\nconst AuthPageCSS = `\n.auth-container { display: flex; justify-content: center; align-items: center; min-height: 100vh; background-color: #f0f2f5; }\n.auth-box { background: white; padding: 40px; border-radius: 8px; box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); width: 100%; max-width: 400px; text-align: center; }\n.auth-box h2 { margin-bottom: 25px; color: #333; }\n.input-group { margin-bottom: 20px; text-align: left; }\n.input-group label { display: block; margin-bottom: 8px; color: #555; font-weight: bold; }\n.input-group input { width: 100%; padding: 12px 15px; border: 1px solid #ccc; border-radius: 4px; box-sizing: border-box; font-size: 1rem; }\n.input-group input:focus { outline: none; border-color: #007bff; box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25); }\n.input-group input:disabled { background-color: #e9ecef; cursor: not-allowed; }\n.auth-button { width: 100%; padding: 12px; background-color: #007bff; color: white; border: none; border-radius: 4px; font-size: 1rem; cursor: pointer; transition: background-color 0.3s ease; margin-top: 10px; }\n.auth-button:hover:not(:disabled) { background-color: #0056b3; }\n.auth-button:disabled { background-color: #cccccc; cursor: not-allowed; }\n.toggle-button { background: none; border: none; color: #007bff; cursor: pointer; margin-top: 20px; font-size: 0.9rem; }\n.toggle-button:hover:not(:disabled) { text-decoration: underline; }\n.toggle-button:disabled { color: #999; cursor: not-allowed; }\n.error-message { color: #dc3545; margin-top: 15px; margin-bottom: 0; font-size: 0.9rem; }\n`;\n*/\n// --- Inject CSS ---\n/*\nconst styleTagAuthId = 'auth-page-styles';\nif (!document.getElementById(styleTagAuthId)) {\n    const styleTag = document.createElement(\"style\");\n    styleTag.id = styleTagAuthId;\n    styleTag.type = \"text/css\";\n    styleTag.innerText = AuthPageCSS;\n    document.head.appendChild(styleTag);\n}\n*/\n// --- End CSS Injection ---\n\nexport default AuthPage;\n","import axios from 'axios';\n\nconst getApiBaseUrl = () => {\n  const backendPort = process.env.REACT_APP_BACKEND_PORT || 5001;\n  const hostname = window.location.hostname;\n  const protocol = window.location.protocol === 'https:' ? 'https:' : 'http:';\n  const backendHost = hostname === 'localhost' || hostname === '127.0.0.1' ? 'localhost' : hostname;\n  return `${protocol}//${backendHost}:${backendPort}/api`;\n};\n\nconst API_BASE_URL = getApiBaseUrl();\nconsole.log('API Base URL:', API_BASE_URL);\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n});\n\napi.interceptors.request.use(\n  (config) => {\n    const userId = localStorage.getItem('userId');\n    if (userId) {\n      config.headers['x-user-id'] = userId;\n    } else if (!config.url.includes('/auth/')) {\n      console.warn('API Interceptor: userId not found in localStorage for non-auth request to', config.url);\n      window.location.href = '/login?sessionExpired=true';\n      return Promise.reject(new Error('User ID not found. Please log in.'));\n    }\n    if (config.data instanceof FormData) {\n      delete config.headers['Content-Type'];\n    } else if (!config.headers['Content-Type']) {\n      config.headers['Content-Type'] = 'application/json';\n    }\n    return config;\n  },\n  (error) => {\n    console.error('API Request Interceptor Error:', error);\n    return Promise.reject(error);\n  }\n);\n\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response && error.response.status === 401) {\n      console.warn('API Response Interceptor: Received 401 Unauthorized. Clearing auth data and redirecting to login.');\n      localStorage.removeItem('sessionId');\n      localStorage.removeItem('username');\n      localStorage.removeItem('userId');\n      if (!window.location.pathname.includes('/login')) {\n        window.location.href = '/login?sessionExpired=true';\n      }\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const signupUser = (userData) => api.post('/auth/signup', userData);\nexport const signinUser = (userData) => api.post('/auth/signin', userData);\nexport const sendMessage = async (message, sessionId, messageHistory, llmPreference) => {\n    try {\n        const response = await axios.post(`${API_BASE_URL}/api/chat/send`, {\n            message,\n            sessionId,\n            messageHistory,\n            llmPreference\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error sending message:', error);\n        throw error;\n    }\n};\nexport const saveChatHistory = (historyData) => api.post('/chat/history', historyData);\nexport const queryRagService = (queryData) => api.post('/chat/rag', queryData);\nexport const getChatSessions = () => api.get('/chat/sessions');\nexport const getSessionDetails = (sessionId) => api.get(`/chat/session/${sessionId}`);\nexport const uploadFile = (formData) => api.post('/upload', formData);\nexport const getUserFiles = () => api.get('/files');\nexport const renameUserFile = (serverFilename, newOriginalName) => api.patch(`/files/${serverFilename}`, { newOriginalName });\nexport const deleteUserFile = (serverFilename) => api.delete(`/files/${serverFilename}`);\nexport const sendSpeechToText = (text) =>\n  api.post(\n    '/speech',\n    { text },\n    {\n      headers: { 'Content-Type': 'application/json' },\n      timeout: 5000,\n    }\n  );\n\n// User Preferences\nexport const updateLLMPreference = (preference) => api.post('/api/user/preferences/llm', { preference });\n\nexport default api;"],"names":["_ref","setIsAuthenticated","isLogin","setIsLogin","useState","username","setUsername","password","setPassword","error","setError","loading","setLoading","navigate","useNavigate","_jsx","className","children","_jsxs","onSubmit","async","e","preventDefault","trim","response","userData","signinUser","length","signupUser","sessionId","loggedInUsername","_id","userId","data","Error","localStorage","setItem","replace","err","_err$response","_err$response$data","errorMessage","message","concat","console","removeItem","htmlFor","type","id","value","onChange","target","required","autoComplete","disabled","onClick","toggleMode","API_BASE_URL","getApiBaseUrl","backendPort","process","REACT_APP_BACKEND_PORT","hostname","window","location","protocol","backendHost","log","api","axios","create","baseURL","interceptors","request","use","config","getItem","headers","url","includes","warn","href","Promise","reject","FormData","status","pathname","post","sendMessage","messageHistory","llmPreference","saveChatHistory","historyData","getChatSessions","get","getSessionDetails","uploadFile","formData","getUserFiles","renameUserFile","serverFilename","newOriginalName","patch","deleteUserFile","delete","updateLLMPreference","preference"],"sourceRoot":""}