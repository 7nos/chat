{"version":3,"file":"static/js/717.784c02c8.chunk.js","mappings":"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","sources":["services/api.js","components/SystemPromptWidget.js","components/HistoryModal.js","components/FileUploadWidget.js","components/FileManagerWidget.js","components/SpeechToText.js","components/LLMPreferenceWidget.js","components/ChatPage.js"],"sourcesContent":["import axios from 'axios';\n\nconst getApiBaseUrl = () => {\n  const backendPort = process.env.REACT_APP_BACKEND_PORT || 5001;\n  const hostname = window.location.hostname;\n  const protocol = window.location.protocol === 'https:' ? 'https:' : 'http:';\n  const backendHost = hostname === 'localhost' || hostname === '127.0.0.1' ? 'localhost' : hostname;\n  return `${protocol}//${backendHost}:${backendPort}/api`;\n};\n\nconst API_BASE_URL = getApiBaseUrl();\nconsole.log('API Base URL:', API_BASE_URL);\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n});\n\napi.interceptors.request.use(\n  (config) => {\n    const userId = localStorage.getItem('userId');\n    if (userId) {\n      config.headers['x-user-id'] = userId;\n    } else if (!config.url.includes('/auth/')) {\n      console.warn('API Interceptor: userId not found in localStorage for non-auth request to', config.url);\n      window.location.href = '/login?sessionExpired=true';\n      return Promise.reject(new Error('User ID not found. Please log in.'));\n    }\n    if (config.data instanceof FormData) {\n      delete config.headers['Content-Type'];\n    } else if (!config.headers['Content-Type']) {\n      config.headers['Content-Type'] = 'application/json';\n    }\n    return config;\n  },\n  (error) => {\n    console.error('API Request Interceptor Error:', error);\n    return Promise.reject(error);\n  }\n);\n\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response && error.response.status === 401) {\n      console.warn('API Response Interceptor: Received 401 Unauthorized. Clearing auth data and redirecting to login.');\n      localStorage.removeItem('sessionId');\n      localStorage.removeItem('username');\n      localStorage.removeItem('userId');\n      if (!window.location.pathname.includes('/login')) {\n        window.location.href = '/login?sessionExpired=true';\n      }\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const signupUser = (userData) => api.post('/auth/signup', userData);\nexport const signinUser = (userData) => api.post('/auth/signin', userData);\nexport const sendMessage = async (message, sessionId, messageHistory, llmPreference) => {\n    try {\n        const response = await axios.post(`${API_BASE_URL}/api/chat/send`, {\n            message,\n            sessionId,\n            messageHistory,\n            llmPreference\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error sending message:', error);\n        throw error;\n    }\n};\nexport const saveChatHistory = (historyData) => api.post('/chat/history', historyData);\nexport const queryRagService = (queryData) => api.post('/chat/rag', queryData);\nexport const getChatSessions = () => api.get('/chat/sessions');\nexport const getSessionDetails = (sessionId) => api.get(`/chat/session/${sessionId}`);\nexport const uploadFile = (formData) => api.post('/upload', formData);\nexport const getUserFiles = () => api.get('/files');\nexport const renameUserFile = (serverFilename, newOriginalName) => api.patch(`/files/${serverFilename}`, { newOriginalName });\nexport const deleteUserFile = (serverFilename) => api.delete(`/files/${serverFilename}`);\nexport const sendSpeechToText = (text) =>\n  api.post(\n    '/speech',\n    { text },\n    {\n      headers: { 'Content-Type': 'application/json' },\n      timeout: 5000,\n    }\n  );\n\n// User Preferences\nexport const updateLLMPreference = (preference) => api.post('/api/user/preferences/llm', { preference });\n\nexport default api;","// client/src/components/SystemPromptWidget.js\nimport React from 'react';\n// Removed CSS import\n\n// Define the THREE required system prompts + a Custom option\nexport const availablePrompts = [\n  {\n    id: 'friendly',\n    title: 'Friendly Tutor',\n    prompt: 'You are a friendly, patient, and encouraging tutor specializing in engineering and scientific topics for PhD students. Explain concepts clearly, break down complex ideas, use analogies, and offer positive reinforcement. Ask follow-up questions to ensure understanding.',\n  },\n  {\n    id: 'explorer', // Changed ID slightly for clarity\n    title: 'Concept Explorer',\n    prompt: 'You are an expert academic lecturer introducing a new, complex engineering or scientific concept. Your goal is to provide a deep, structured explanation. Define terms rigorously, outline the theory, provide relevant mathematical formulations (using Markdown), illustrative examples, and discuss applications or limitations pertinent to PhD-level research.',\n  },\n  {\n    id: 'knowledge_check',\n    title: 'Knowledge Check',\n    prompt: 'You are assessing understanding of engineering/scientific topics. Ask targeted questions to test knowledge, identify misconceptions, and provide feedback on the answers. Start by asking the user what topic they want to be quizzed on.',\n  },\n   {\n    id: 'custom', // Represents user-edited state\n    title: 'Custom Prompt',\n    prompt: '', // Placeholder, actual text comes from textarea\n  },\n];\n\n// Helper to find prompt text by ID - Export if needed elsewhere\nexport const getPromptTextById = (id) => {\n  const prompt = availablePrompts.find(p => p.id === id);\n  return prompt ? prompt.prompt : ''; // Return empty string if not found\n};\n\n\n/**\n * Renders a sidebar widget with a dropdown for preset prompts\n * and an editable textarea for the current system prompt.\n * @param {object} props - Component props.\n * @param {string} props.selectedPromptId - The ID of the currently active preset (or 'custom').\n * @param {string} props.promptText - The current text of the system prompt (potentially edited).\n * @param {function} props.onSelectChange - Callback when dropdown selection changes. Passes the new ID.\n * @param {function} props.onTextChange - Callback when the textarea content changes. Passes the new text.\n */\nconst SystemPromptWidget = ({ selectedPromptId, promptText, onSelectChange, onTextChange }) => {\n\n  const handleDropdownChange = (event) => {\n    const newId = event.target.value;\n    onSelectChange(newId); // Notify parent of the ID change\n  };\n\n  const handleTextareaChange = (event) => {\n    onTextChange(event.target.value); // Notify parent of the text change\n  };\n\n  return (\n    <div className=\"system-prompt-widget\">\n      <h3>Assistant Mode</h3>\n\n      {/* Dropdown for selecting presets */}\n      <select\n        className=\"prompt-select\"\n        value={selectedPromptId} // Control the selected option via state\n        onChange={handleDropdownChange}\n        aria-label=\"Select Assistant Mode\"\n      >\n        {/* Filter out 'custom' from being a selectable option initially */}\n        {availablePrompts.filter(p => p.id !== 'custom').map((p) => (\n          <option key={p.id} value={p.id}>\n            {p.title}\n          </option>\n        ))}\n        {/* Add Custom option dynamically if the current ID is 'custom' */}\n        {/* This ensures \"Custom Prompt\" appears in the dropdown only when it's actually active */}\n        {selectedPromptId === 'custom' && (\n            <option key=\"custom\" value=\"custom\">\n                Custom Prompt\n            </option>\n        )}\n      </select>\n\n      {/* Editable Textarea for the actual prompt */}\n      <label htmlFor=\"system-prompt-text\" className=\"prompt-label\">\n        System Prompt (Editable)\n      </label>\n      <textarea\n        id=\"system-prompt-text\"\n        className=\"prompt-textarea\"\n        value={promptText} // Display the current prompt text (could be preset or edited)\n        onChange={handleTextareaChange}\n        rows=\"5\" // Suggests initial height, CSS controls actual fixed height\n        maxLength=\"2000\" // Optional: Limit character count if desired\n        placeholder=\"The current system prompt will appear here. You can edit it directly.\"\n        aria-label=\"Editable System Prompt Text\"\n      />\n       {/* Optional: Character count indicator\n       <div className=\"char-count\">{promptText?.length || 0} / 2000</div> */}\n    </div>\n  );\n};\n\n// --- CSS for SystemPromptWidget ---\nconst SystemPromptWidgetCSS = `\n/* client/src/components/SystemPromptWidget.css */\n.system-prompt-widget { padding: 20px; background-color: var(--bg-header); box-sizing: border-box; display: flex; flex-direction: column; flex-shrink: 0; }\n.system-prompt-widget h3 { margin-top: 0; margin-bottom: 15px; color: var(--text-primary); font-size: 1rem; font-weight: 600; padding-bottom: 10px; }\n.prompt-select { width: 100%; padding: 10px 12px; margin-bottom: 15px; background-color: #2a2a30; color: var(--text-primary); border: 1px solid var(--border-color); border-radius: 6px; font-size: 0.9rem; cursor: pointer; appearance: none; -webkit-appearance: none; -moz-appearance: none; background-image: url('data:image/svg+xml;utf8,<svg fill=\"%23b0b3b8\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7 10l5 5 5-5z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'); background-repeat: no-repeat; background-position: right 10px center; background-size: 18px; }\n.prompt-select:focus { outline: none; border-color: var(--accent-blue); box-shadow: 0 0 0 2px rgba(0, 132, 255, 0.3); }\n.prompt-label { display: block; margin-bottom: 8px; color: var(--text-secondary); font-size: 0.85rem; font-weight: 500; }\n.prompt-textarea { width: 100%; background-color: var(--bg-input); color: var(--text-primary); border: 1px solid var(--border-color); border-radius: 6px; padding: 10px 12px; font-size: 0.85rem; line-height: 1.5; box-sizing: border-box; font-family: inherit; resize: none; height: 100px; overflow-y: auto; }\n.prompt-textarea:focus { outline: none; border-color: var(--accent-blue); box-shadow: 0 0 0 2px rgba(0, 132, 255, 0.3); }\n.prompt-textarea::placeholder { color: var(--text-secondary); opacity: 0.7; }\n.char-count { text-align: right; font-size: 0.75rem; color: var(--text-secondary); margin-top: 5px; }\n`;\n// --- Inject CSS ---\nconst styleTagPromptId = 'system-prompt-widget-styles';\nif (!document.getElementById(styleTagPromptId)) {\n    const styleTag = document.createElement(\"style\");\n    styleTag.id = styleTagPromptId;\n    styleTag.type = \"text/css\";\n    styleTag.innerText = SystemPromptWidgetCSS;\n    document.head.appendChild(styleTag);\n}\n// --- End CSS Injection ---\n\n\nexport default SystemPromptWidget;\n","// client/src/components/HistoryModal.js\nimport React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { getChatSessions, getSessionDetails } from '../services/api';\nimport './HistoryModal.css'; // Import the new CSS file\n\nconst HistoryModal = ({ isOpen, onClose }) => {\n  const [sessions, setSessions] = useState([]);\n  const [selectedSession, setSelectedSession] = useState(null);\n  const [isLoadingSessions, setIsLoadingSessions] = useState(false);\n  const [isLoadingDetails, setIsLoadingDetails] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (isOpen) {\n      const fetchSessions = async () => {\n        // Ensure userId exists before fetching\n        const currentUserId = localStorage.getItem('userId');\n        if (!currentUserId) {\n            setError('Cannot load history: User not logged in.');\n            setSessions([]);\n            return;\n        }\n\n        setIsLoadingSessions(true);\n        setError('');\n        setSelectedSession(null);\n        setSessions([]);\n        try {\n          // Interceptor adds user ID\n          const response = await getChatSessions();\n          setSessions(response.data || []);\n        } catch (err) {\n          console.error(\"Error fetching sessions:\", err);\n          setError(err.response?.data?.message || 'Failed to load chat history sessions.');\n          setSessions([]);\n          if (err.response?.status === 401) {\n              console.warn(\"HistoryModal: Received 401 fetching sessions.\");\n              // Optionally close modal or trigger logout\n              onClose();\n          }\n        } finally {\n          setIsLoadingSessions(false);\n        }\n      };\n      fetchSessions();\n    } else {\n      setSessions([]);\n      setSelectedSession(null);\n      setError('');\n      setIsLoadingSessions(false);\n      setIsLoadingDetails(false);\n    }\n  }, [isOpen, onClose]); // Added onClose to dependency array\n\n  const handleSelectSession = async (sessionId) => {\n     // Ensure userId exists before fetching\n    const currentUserId = localStorage.getItem('userId');\n    if (!currentUserId) {\n        setError('Cannot load session details: User not logged in.');\n        return;\n    }\n    if (!sessionId || isLoadingDetails || selectedSession?.sessionId === sessionId) return;\n\n    setIsLoadingDetails(true);\n    setError('');\n    try {\n      // Interceptor adds user ID\n      const response = await getSessionDetails(sessionId);\n      setSelectedSession(response.data);\n    } catch (err) {\n      console.error(`Error fetching session ${sessionId}:`, err);\n      setError(err.response?.data?.message || `Failed to load details for session ${sessionId}.`);\n      setSelectedSession(null);\n      if (err.response?.status === 401) {\n          console.warn(\"HistoryModal: Received 401 fetching session details.\");\n          // Optionally close modal or trigger logout\n          onClose();\n      }\n    } finally {\n      setIsLoadingDetails(false);\n    }\n  };\n\n  const formatDate = (dateString) => {\n    if (!dateString) return 'N/A';\n    try {\n      const date = new Date(dateString);\n      if (isNaN(date.getTime())) {\n          throw new Error(\"Invalid date string\");\n      }\n      return date.toLocaleString(undefined, { dateStyle: 'short', timeStyle: 'short' });\n    } catch (e) {\n      console.warn(\"Error formatting date:\", dateString, e);\n      return dateString;\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"history-modal-overlay\" onClick={onClose}>\n      <div className=\"history-modal-content\" onClick={(e) => e.stopPropagation()}>\n        <button className=\"history-modal-close-btn\" onClick={onClose} aria-label=\"Close history\">×</button>\n        <h2>Chat History</h2>\n\n        {error && !isLoadingDetails && !isLoadingSessions && <div className=\"history-error\">{error}</div>}\n\n        <div className=\"history-layout\">\n          <div className=\"history-session-list\">\n            <h3>Sessions</h3>\n            {isLoadingSessions ? (\n              <p className=\"history-loading\">Loading sessions...</p>\n            ) : sessions.length === 0 && !error ? (\n              <p className=\"history-empty\">No past sessions found.</p>\n            ) : (\n              <ul>\n                {sessions.map((session) => (\n                  <li\n                    key={session.sessionId}\n                    className={selectedSession?.sessionId === session.sessionId ? 'active' : ''}\n                    onClick={() => handleSelectSession(session.sessionId)}\n                    tabIndex={0}\n                    onKeyDown={(e) => (e.key === 'Enter' || e.key === ' ') && handleSelectSession(session.sessionId)}\n                    role=\"button\"\n                  >\n                    <div className=\"session-preview\" title={session.preview || 'Chat session'}>\n                      {session.preview || 'Chat session'}\n                    </div>\n                    <div className=\"session-date\">\n                      {formatDate(session.updatedAt || session.createdAt)} ({session.messageCount || 0} msgs)\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n\n          <div className=\"history-session-details\">\n            <h3>Session Details</h3>\n            {isLoadingDetails ? (\n              <p className=\"history-loading\">Loading details...</p>\n            ) : !selectedSession ? (\n              <p className=\"history-empty\">Select a session from the left to view its messages.</p>\n            ) : (\n              <div className=\"history-messages-area\">\n                {selectedSession.messages && selectedSession.messages.length > 0 ? (\n                  selectedSession.messages.map((msg, index) => (\n                    !msg?.role || !msg?.parts?.length ?\n                      <div key={`${selectedSession.sessionId}-err-${index}`} className=\"history-message-error\">Invalid message data</div>\n                    :\n                    <div key={`${selectedSession.sessionId}-${index}`} className={`history-message ${msg.role}`}>\n                      <div className=\"history-message-content\">\n                        <ReactMarkdown children={msg.parts[0]?.text || ''} />\n                      </div>\n                      <span className=\"history-message-timestamp\">\n                        {formatDate(msg.timestamp)}\n                      </span>\n                    </div>\n                  ))\n                ) : (\n                  <p className=\"history-empty\">This session appears to have no messages.</p>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HistoryModal;\n","// client/src/components/FileUploadWidget.js\nimport React, { useState, useRef } from 'react';\nimport { uploadFile } from '../services/api';\nimport './FileUploadWidget.css'; // Import the new CSS file\n\nconst FileUploadWidget = ({ onUploadSuccess }) => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState(''); // 'uploading', 'success', 'error', ''\n  const [statusMessage, setStatusMessage] = useState('');\n  const fileInputRef = useRef(null);\n\n  const allowedFileTypesString = \".pdf,.txt,.docx,.doc,.pptx,.ppt,.py,.js,.bmp,.png,.jpg,.jpeg\";\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const fileExt = \".\" + file.name.split('.').pop().toLowerCase();\n      if (!allowedFileTypesString.includes(fileExt)) {\n           setStatusMessage(`Error: File type (${fileExt}) not allowed.`);\n           setUploadStatus('error');\n           setSelectedFile(null);\n           if (fileInputRef.current) fileInputRef.current.value = '';\n           return;\n      }\n\n      const MAX_SIZE_MB = 20;\n      const MAX_SIZE_BYTES = MAX_SIZE_MB * 1024 * 1024;\n      if (file.size > MAX_SIZE_BYTES) {\n          setStatusMessage(`Error: File exceeds ${MAX_SIZE_MB}MB limit.`);\n          setUploadStatus('error');\n          setSelectedFile(null);\n          if (fileInputRef.current) fileInputRef.current.value = '';\n          return;\n      }\n\n      setSelectedFile(file);\n      setStatusMessage(`Selected: ${file.name}`);\n      setUploadStatus('');\n\n    } else {\n        // Handle user cancelling file selection if needed\n    }\n  };\n\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setStatusMessage('Please select a file first.');\n      setUploadStatus('error');\n      return;\n    }\n    // Ensure userId exists before uploading\n     const currentUserId = localStorage.getItem('userId');\n     if (!currentUserId) {\n         setStatusMessage('Error: Not logged in. Cannot upload file.');\n         setUploadStatus('error');\n         return;\n     }\n\n    setUploadStatus('uploading');\n    setStatusMessage(`Uploading ${selectedFile.name}...`);\n\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n\n    try {\n      // Interceptor adds user ID header\n      const response = await uploadFile(formData);\n\n      setUploadStatus('success');\n      setStatusMessage(response.data.message || 'Upload successful!');\n      console.log('Upload successful:', response.data);\n\n      setSelectedFile(null);\n      if (fileInputRef.current) {\n          fileInputRef.current.value = '';\n      }\n\n      if (onUploadSuccess && typeof onUploadSuccess === 'function') {\n          onUploadSuccess();\n      }\n\n      setTimeout(() => {\n          // Check if status is still success before clearing\n          setUploadStatus(prevStatus => prevStatus === 'success' ? '' : prevStatus);\n          setStatusMessage(prevMsg => prevMsg === (response.data.message || 'Upload successful!') ? '' : prevMsg);\n      }, 4000);\n\n\n    } catch (err) {\n      console.error(\"Upload Error:\", err.response || err);\n      setUploadStatus('error');\n      setStatusMessage(err.response?.data?.message || 'Upload failed. Please check the file or try again.');\n      if (err.response?.status === 401) {\n          console.warn(\"FileUpload: Received 401 during upload.\");\n          // Consider calling a logout function passed via props or context\n      }\n    }\n  };\n\n  const triggerFileInput = () => {\n    fileInputRef.current?.click();\n  };\n\n  return (\n    <div className=\"file-upload-widget\">\n      <h4>Upload File</h4>\n      <input\n        type=\"file\"\n        ref={fileInputRef}\n        onChange={handleFileChange}\n        accept={allowedFileTypesString}\n        style={{ display: 'none' }}\n        aria-hidden=\"true\"\n      />\n      <button\n        type=\"button\"\n        className=\"select-file-btn\"\n        onClick={triggerFileInput}\n        disabled={uploadStatus === 'uploading'}\n      >\n        Choose File\n      </button>\n      <div className={`status-message ${uploadStatus}`}>\n        {statusMessage || 'No file selected.'}\n      </div>\n      <button\n        type=\"button\"\n        className=\"upload-btn\"\n        onClick={handleUpload}\n        disabled={!selectedFile || uploadStatus === 'uploading'}\n      >\n        {uploadStatus === 'uploading' ? 'Uploading...' : 'Upload'}\n      </button>\n    </div>\n  );\n};\n\nexport default FileUploadWidget;\n","// client/src/components/FileManagerWidget.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { getUserFiles, renameUserFile, deleteUserFile } from '../services/api';\nimport './FileManagerWidget.css'; // Import the new CSS file\n\nconst getFileIcon = (type) => {\n  switch (type) {\n    case 'docs': return '📄';\n    case 'images': return '🖼️';\n    case 'code': return '💻';\n    default: return '📁';\n  }\n};\n\nconst formatFileSize = (bytes) => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  if (typeof bytes !== 'number' || bytes < 0) return 'N/A';\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  const index = Math.max(0, Math.min(i, sizes.length - 1));\n  return parseFloat((bytes / Math.pow(k, index)).toFixed(1)) + ' ' + sizes[index];\n};\n\n\nconst FileManagerWidget = ({ refreshTrigger }) => {\n  const [userFiles, setUserFiles] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [renamingFile, setRenamingFile] = useState(null);\n  const [newName, setNewName] = useState('');\n\n  const fetchUserFiles = useCallback(async () => {\n    // Ensure userId exists before fetching\n    const currentUserId = localStorage.getItem('userId');\n    if (!currentUserId) {\n        console.log(\"FileManager: Skipping fetch, no userId.\");\n        setUserFiles([]); // Clear files if no user\n        return;\n    }\n\n    setIsLoading(true);\n    setError('');\n    try {\n      // Interceptor adds user ID\n      const response = await getUserFiles();\n      setUserFiles(response.data || []);\n    } catch (err) {\n      console.error(\"Error fetching user files:\", err);\n      setError(err.response?.data?.message || 'Failed to load files.');\n      setUserFiles([]);\n      // Handle potential logout if 401\n      if (err.response?.status === 401) {\n          console.warn(\"FileManager: Received 401, potential logout needed.\");\n          // Consider calling a logout function passed via props or context\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  }, []); // Removed userId dependency, check inside\n\n  useEffect(() => {\n    fetchUserFiles();\n  }, [refreshTrigger, fetchUserFiles]);\n\n  const handleRenameClick = (file) => {\n    setRenamingFile(file.serverFilename);\n    setNewName(file.originalName);\n    setError('');\n  };\n\n  const handleRenameCancel = () => {\n    setRenamingFile(null);\n    setNewName('');\n    setError('');\n  };\n\n  const handleRenameSave = async () => {\n    if (!renamingFile || !newName.trim()) {\n         setError('New name cannot be empty.');\n         return;\n    }\n    if (newName.includes('/') || newName.includes('\\\\')) {\n        setError('New name cannot contain slashes.');\n        return;\n    }\n\n    setIsLoading(true);\n    setError('');\n    try {\n      // Interceptor adds user ID\n      await renameUserFile(renamingFile, newName.trim());\n      setRenamingFile(null);\n      setNewName('');\n      fetchUserFiles();\n    } catch (err) {\n      console.error(\"Error renaming file:\", err);\n      setError(err.response?.data?.message || 'Failed to rename file.');\n       if (err.response?.status === 401) {\n          console.warn(\"FileManager: Received 401 during rename.\");\n      }\n    } finally {\n       setIsLoading(false);\n    }\n  };\n\n  const handleRenameInputKeyDown = (e) => {\n      if (e.key === 'Enter') {\n          handleRenameSave();\n      } else if (e.key === 'Escape') {\n          handleRenameCancel();\n      }\n  };\n\n  const handleDeleteFile = async (serverFilename, originalName) => {\n    if (!window.confirm(`Are you sure you want to delete \"${originalName}\"? This cannot be undone.`)) {\n      return;\n    }\n\n    setIsLoading(true);\n    setError('');\n    try {\n      // Interceptor adds user ID\n      await deleteUserFile(serverFilename);\n      fetchUserFiles();\n    } catch (err) {\n      console.error(\"Error deleting file:\", err);\n      setError(err.response?.data?.message || 'Failed to delete file.');\n       if (err.response?.status === 401) {\n          console.warn(\"FileManager: Received 401 during delete.\");\n      }\n    } finally {\n       setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"file-manager-widget\">\n      <div className=\"fm-header\">\n        <h4>Your Uploaded Files</h4>\n        <button\n            onClick={fetchUserFiles}\n            disabled={isLoading}\n            className=\"fm-refresh-btn\"\n            title=\"Refresh File List\"\n        >\n            🔄\n        </button>\n      </div>\n\n      {error && <div className=\"fm-error\">{error}</div>}\n\n      <div className=\"fm-file-list-container\">\n        {isLoading && userFiles.length === 0 ? (\n          <p className=\"fm-loading\">Loading files...</p>\n        ) : userFiles.length === 0 && !isLoading ? (\n          <p className=\"fm-empty\">No files uploaded yet.</p>\n        ) : (\n          <ul className=\"fm-file-list\">\n            {userFiles.map((file) => (\n              <li key={file.serverFilename} className=\"fm-file-item\">\n                <span className=\"fm-file-icon\">{getFileIcon(file.type)}</span>\n                <div className=\"fm-file-details\">\n                  {renamingFile === file.serverFilename ? (\n                    <div className=\"fm-rename-section\">\n                      <input\n                        type=\"text\"\n                        value={newName}\n                        onChange={(e) => setNewName(e.target.value)}\n                        onKeyDown={handleRenameInputKeyDown}\n                        autoFocus\n                        className=\"fm-rename-input\"\n                        aria-label={`New name for ${file.originalName}`}\n                      />\n                      <button onClick={handleRenameSave} disabled={isLoading || !newName.trim()} className=\"fm-action-btn fm-save-btn\" title=\"Save Name\">✔️</button>\n                      <button onClick={handleRenameCancel} disabled={isLoading} className=\"fm-action-btn fm-cancel-btn\" title=\"Cancel Rename\">❌</button>\n                    </div>\n                  ) : (\n                    <>\n                      <span className=\"fm-file-name\" title={file.originalName}>{file.originalName}</span>\n                      <span className=\"fm-file-size\">{formatFileSize(file.size)}</span>\n                    </>\n                  )}\n                </div>\n                {renamingFile !== file.serverFilename && (\n                  <div className=\"fm-file-actions\">\n                    <button\n                        onClick={() => handleRenameClick(file)}\n                        disabled={isLoading || !!renamingFile}\n                        className=\"fm-action-btn fm-rename-btn\"\n                        title=\"Rename\"\n                    >\n                       ✏️\n                    </button>\n                    <button\n                        onClick={() => handleDeleteFile(file.serverFilename, file.originalName)}\n                        disabled={isLoading || !!renamingFile}\n                        className=\"fm-action-btn fm-delete-btn\"\n                        title=\"Delete\"\n                    >\n                        🗑️\n                    </button>\n                  </div>\n                )}\n              </li>\n            ))}\n          </ul>\n        )}\n         {isLoading && userFiles.length > 0 && <p className=\"fm-loading fm-loading-bottom\">Processing...</p>}\n      </div>\n    </div>\n  );\n};\n\n// --- CSS for FileManagerWidget ---\nconst FileManagerWidgetCSS = `\n/* client/src/components/FileManagerWidget.css */\n.file-manager-widget { display: flex; flex-direction: column; gap: 10px; padding: 15px 0px 15px 20px; box-sizing: border-box; height: 100%; overflow: hidden; }\n.fm-header { display: flex; justify-content: space-between; align-items: center; padding-right: 20px; flex-shrink: 0; }\n.file-manager-widget h4 { margin: 0; color: var(--text-primary); font-size: 0.95rem; font-weight: 600; }\n.fm-refresh-btn { background: none; border: 1px solid var(--border-color); color: var(--text-secondary); padding: 3px 6px; border-radius: 4px; cursor: pointer; font-size: 0.9rem; line-height: 1; transition: color 0.2s, border-color 0.2s, background-color 0.2s; }\n.fm-refresh-btn:hover:not(:disabled) { color: var(--text-primary); border-color: #555; background-color: #3a3a40; }\n.fm-refresh-btn:disabled { cursor: not-allowed; opacity: 0.5; }\n.fm-error, .fm-loading, .fm-empty { font-size: 0.85rem; padding: 10px 15px; border-radius: 4px; text-align: center; margin: 5px 20px 5px 0; flex-shrink: 0; }\n.fm-error { color: var(--error-color); border: 1px solid var(--error-color); background-color: var(--error-bg); }\n.fm-loading, .fm-empty { color: var(--text-secondary); font-style: italic; }\n.fm-loading-bottom { margin-top: auto; padding: 5px; }\n.fm-file-list-container { flex-grow: 1; overflow-y: auto; padding-right: 10px; margin-right: 10px; position: relative; }\n.fm-file-list-container::-webkit-scrollbar { width: 8px; }\n.fm-file-list-container::-webkit-scrollbar-track { background: transparent; }\n.fm-file-list-container::-webkit-scrollbar-thumb { background-color: #4a4a50; border-radius: 10px; }\n.fm-file-list-container { scrollbar-width: thin; scrollbar-color: #4a4a50 transparent; }\n.fm-file-list { list-style: none; padding: 0; margin: 0; }\n.fm-file-item { display: flex; align-items: center; padding: 8px 5px; margin-bottom: 5px; border-radius: 4px; background-color: #2f2f34; transition: background-color 0.2s ease; gap: 10px; }\n.fm-file-item:hover { background-color: #3a3a40; }\n.fm-file-icon { flex-shrink: 0; font-size: 1.1rem; line-height: 1; }\n.fm-file-details { flex-grow: 1; overflow: hidden; display: flex; flex-direction: column; justify-content: center; min-height: 30px; }\n.fm-file-name { font-size: 0.85rem; color: var(--text-primary); white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }\n.fm-file-size { font-size: 0.7rem; color: var(--text-secondary); margin-top: 2px; }\n.fm-file-actions { display: flex; gap: 5px; flex-shrink: 0; margin-left: auto; }\n.fm-action-btn { background: none; border: none; color: var(--text-secondary); cursor: pointer; padding: 3px; font-size: 1rem; line-height: 1; border-radius: 3px; transition: color 0.2s ease, background-color 0.2s ease; }\n.fm-action-btn:hover:not(:disabled) { color: var(--text-primary); background-color: #4a4a50; }\n.fm-action-btn:disabled { opacity: 0.5; cursor: not-allowed; }\n.fm-delete-btn:hover:not(:disabled) { color: var(--error-color); }\n.fm-rename-btn:hover:not(:disabled) { color: var(--accent-blue-light); }\n.fm-save-btn:hover:not(:disabled) { color: #52c41a; } /* Green */\n.fm-cancel-btn:hover:not(:disabled) { color: #ffc107; } /* Orange/Yellow */\n.fm-rename-section { display: flex; align-items: center; gap: 5px; width: 100%; }\n.fm-rename-input { flex-grow: 1; padding: 4px 8px; background-color: var(--bg-input); color: var(--text-primary); border: 1px solid var(--border-color); border-radius: 4px; font-size: 0.85rem; outline: none; min-width: 50px; }\n.fm-rename-input:focus { border-color: var(--accent-blue); }\n`;\n// --- Inject CSS ---\nconst styleTagFileManagerId = 'file-manager-widget-styles';\nif (!document.getElementById(styleTagFileManagerId)) {\n    const styleTag = document.createElement(\"style\");\n    styleTag.id = styleTagFileManagerId;\n    styleTag.type = \"text/css\";\n    styleTag.innerText = FileManagerWidgetCSS;\n    document.head.appendChild(styleTag);\n}\n// --- End CSS Injection ---\n\nexport default FileManagerWidget;\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport '../styles/SpeechToText.css';\r\nimport axios from 'axios';\r\n\r\nconst SpeechToText = ({ onTranscript, userId }) => {\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [transcript, setTranscript] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [retryCount, setRetryCount] = useState(0);\r\n  const [isRecognitionActive, setIsRecognitionActive] = useState(false);\r\n  const [connectionState, setConnectionState] = useState('disconnected'); // 'disconnected', 'connecting', 'connected', 'error'\r\n  \r\n  const recognitionRef = useRef(null);\r\n  const retryTimeoutRef = useRef(null);\r\n  const abortCountRef = useRef(0); // Track consecutive aborts\r\n  const isComponentMounted = useRef(true);\r\n  const MAX_RETRIES = 2; // Reduced from 3 to 2\r\n  const MAX_CONSECUTIVE_ABORTS = 1; // Reduced from 2 to 1\r\n  const RETRY_DELAY = 1000;\r\n  const NETWORK_RETRY_DELAY = 500;\r\n  const ABORT_RETRY_DELAY = 300;\r\n\r\n  // Setup recognition instance (moved above its first use)\r\n  const setupRecognition = useCallback(() => {\r\n    if (!isComponentMounted.current || !userId) {\r\n      console.log('Cannot setup recognition: component unmounted or no user');\r\n      return null;\r\n    }\r\n\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    if (!SpeechRecognition) {\r\n      setError('Speech Recognition API is not supported in this browser. Please use Chrome or Edge.');\r\n      return null;\r\n    }\r\n\r\n    // Cleanup existing recognition if any\r\n    cleanup();\r\n\r\n    const recognition = new SpeechRecognition();\r\n    recognition.continuous = true;\r\n    recognition.interimResults = true;\r\n    recognition.lang = 'en-US';\r\n\r\n    recognition.onstart = () => {\r\n      if (!isComponentMounted.current) return;\r\n      console.log('Recognition started');\r\n      setConnectionState('connected');\r\n      setError(null);\r\n      abortCountRef.current = 0;\r\n    };\r\n\r\n    recognition.onresult = async (event) => {\r\n      if (!isComponentMounted.current) return;\r\n      let interimTranscript = '';\r\n      let finalTranscript = '';\r\n\r\n      for (let i = event.resultIndex; i < event.results.length; i++) {\r\n        const transcriptPart = event.results[i][0].transcript;\r\n        if (event.results[i].isFinal) {\r\n          finalTranscript += transcriptPart;\r\n        } else {\r\n          interimTranscript += transcriptPart;\r\n        }\r\n      }\r\n\r\n      const currentTranscript = finalTranscript + interimTranscript;\r\n      setTranscript(currentTranscript);\r\n\r\n      if (finalTranscript) {\r\n        try {\r\n          setIsProcessing(true);\r\n          const response = await axios.post('http://localhost:5001/api/speech', \r\n            { text: finalTranscript },\r\n            { \r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n                'X-User-ID': userId\r\n              },\r\n              timeout: 5000 // Add timeout to prevent hanging requests\r\n            }\r\n          );\r\n          \r\n          if (onTranscript) {\r\n            onTranscript(finalTranscript, response.data);\r\n          }\r\n        } catch (err) {\r\n          console.error('Error processing transcript:', err);\r\n          if (err.code === 'ECONNABORTED') {\r\n            setError('Request timed out. Please try again.');\r\n          } else {\r\n            setError(err.response?.data?.error || 'Failed to process speech. Please try again.');\r\n          }\r\n        } finally {\r\n          setIsProcessing(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    recognition.onerror = (event) => {\r\n      if (!isComponentMounted.current) return;\r\n      console.error('Speech recognition error:', event.error);\r\n      \r\n      let errorMessage = '';\r\n      let shouldRetry = false;\r\n      let retryDelay = RETRY_DELAY;\r\n      \r\n      switch (event.error) {\r\n        case 'network':\r\n          if (retryCount >= MAX_RETRIES) {\r\n            errorMessage = 'Network error occurred. Please try again later.';\r\n            shouldRetry = false;\r\n            setIsListening(false);\r\n            cleanup();\r\n          } else {\r\n            errorMessage = 'Network error occurred. Retrying...';\r\n            shouldRetry = true;\r\n            retryDelay = NETWORK_RETRY_DELAY;\r\n          }\r\n          setConnectionState('error');\r\n          break;\r\n        case 'aborted':\r\n          abortCountRef.current += 1;\r\n          if (abortCountRef.current >= MAX_CONSECUTIVE_ABORTS) {\r\n            errorMessage = 'Speech recognition was interrupted. Please try again.';\r\n            shouldRetry = false;\r\n            setIsListening(false);\r\n            cleanup();\r\n          } else {\r\n            errorMessage = 'Speech recognition was interrupted. Retrying...';\r\n            shouldRetry = true;\r\n            retryDelay = ABORT_RETRY_DELAY;\r\n          }\r\n          setConnectionState('error');\r\n          break;\r\n        case 'not-allowed':\r\n          errorMessage = 'Microphone access was denied. Please allow microphone access and try again.';\r\n          setConnectionState('error');\r\n          break;\r\n        case 'audio-capture':\r\n          errorMessage = 'No microphone was found. Please ensure a microphone is connected.';\r\n          setConnectionState('error');\r\n          break;\r\n        case 'no-speech':\r\n          errorMessage = 'No speech was detected. Please try speaking again.';\r\n          shouldRetry = true;\r\n          break;\r\n        case 'service-not-allowed':\r\n          errorMessage = 'Speech recognition service is not allowed. Please check your browser settings.';\r\n          setConnectionState('error');\r\n          break;\r\n        default:\r\n          errorMessage = `Speech recognition error: ${event.error}. Please try again.`;\r\n          shouldRetry = retryCount < MAX_RETRIES;\r\n          setConnectionState('error');\r\n      }\r\n      \r\n      setError(errorMessage);\r\n      \r\n      if (shouldRetry && isListening && isComponentMounted.current) {\r\n        setRetryCount(prev => prev + 1);\r\n        setConnectionState('connecting');\r\n        \r\n        cleanupTimeouts();\r\n        \r\n        retryTimeoutRef.current = setTimeout(() => {\r\n          if (isListening && !isRecognitionActive && isComponentMounted.current) {\r\n            if (safeStartRecognition()) {\r\n              setError('Reconnecting...');\r\n            } else {\r\n              setError('Failed to reconnect. Please try again.');\r\n              setIsListening(false);\r\n              cleanup();\r\n            }\r\n          }\r\n        }, retryDelay);\r\n      } else if (!shouldRetry) {\r\n        setIsListening(false);\r\n        cleanup();\r\n      }\r\n    };\r\n\r\n    recognition.onend = () => {\r\n      if (!isComponentMounted.current) return;\r\n      console.log('Recognition ended');\r\n      setIsRecognitionActive(false);\r\n      \r\n      if (isListening && isComponentMounted.current) {\r\n        if (retryCount < MAX_RETRIES && abortCountRef.current < MAX_CONSECUTIVE_ABORTS) {\r\n          setConnectionState('connecting');\r\n          cleanupTimeouts();\r\n          \r\n          retryTimeoutRef.current = setTimeout(() => {\r\n            if (isListening && !isRecognitionActive && isComponentMounted.current) {\r\n              if (!safeStartRecognition()) {\r\n                setError('Failed to restart speech recognition. Please try again.');\r\n                setIsListening(false);\r\n                cleanup();\r\n              }\r\n            }\r\n          }, RETRY_DELAY);\r\n        } else {\r\n          setError('Maximum retry attempts reached. Please try again.');\r\n          setIsListening(false);\r\n          cleanup();\r\n        }\r\n      } else {\r\n        setConnectionState('disconnected');\r\n      }\r\n    };\r\n\r\n    return recognition;\r\n  }, [isListening, onTranscript, userId, retryCount, isRecognitionActive, cleanup, safeStartRecognition]);\r\n\r\n  // Cleanup function to clear any pending timeouts and recognition\r\n  const cleanup = useCallback(() => {\r\n    console.log('Cleaning up speech recognition...');\r\n    if (retryTimeoutRef.current) {\r\n      clearTimeout(retryTimeoutRef.current);\r\n      retryTimeoutRef.current = null;\r\n    }\r\n    if (recognitionRef.current) {\r\n      try {\r\n        recognitionRef.current.stop();\r\n      } catch (err) {\r\n        console.warn('Error stopping recognition during cleanup:', err);\r\n      }\r\n      recognitionRef.current = null;\r\n    }\r\n    setIsRecognitionActive(false);\r\n    setConnectionState('disconnected');\r\n    setRetryCount(0);\r\n    abortCountRef.current = 0;\r\n    setError(null);\r\n    setTranscript('');\r\n  }, []);\r\n\r\n  // Effect for cleanup on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      console.log('Component unmounting, cleaning up...');\r\n      isComponentMounted.current = false;\r\n      cleanup();\r\n    };\r\n  }, [cleanup]);\r\n\r\n  // Effect to handle userId changes (logout)\r\n  useEffect(() => {\r\n    if (!userId) {\r\n      console.log('User logged out, cleaning up speech recognition...');\r\n      cleanup();\r\n      setIsListening(false);\r\n    }\r\n  }, [userId, cleanup]);\r\n\r\n  // Cleanup function to clear any pending timeouts\r\n  const cleanupTimeouts = useCallback(() => {\r\n    if (retryTimeoutRef.current) {\r\n      clearTimeout(retryTimeoutRef.current);\r\n      retryTimeoutRef.current = null;\r\n    }\r\n  }, []);\r\n\r\n  // Function to safely stop recognition\r\n  const safeStopRecognition = useCallback(() => {\r\n    cleanup();\r\n  }, [cleanup]);\r\n\r\n  // Function to safely start recognition (add cleanupTimeouts to deps)\r\n  const safeStartRecognition = useCallback(() => {\r\n    if (!isComponentMounted.current || !userId) {\r\n      console.log('Cannot start recognition: component unmounted or no user');\r\n      return false;\r\n    }\r\n\r\n    if (!recognitionRef.current) {\r\n      const recognition = setupRecognition();\r\n      if (!recognition) return false;\r\n      recognitionRef.current = recognition;\r\n    }\r\n\r\n    try {\r\n      recognitionRef.current.start();\r\n      setIsRecognitionActive(true);\r\n      setConnectionState('connected');\r\n      abortCountRef.current = 0;\r\n      return true;\r\n    } catch (err) {\r\n      console.error('Error starting recognition:', err);\r\n      setConnectionState('error');\r\n      setIsRecognitionActive(false);\r\n      return false;\r\n    }\r\n  }, [userId, setupRecognition, cleanupTimeouts]);\r\n\r\n  useEffect(() => {\r\n    if (isListening) {\r\n      const recognition = setupRecognition();\r\n      if (recognition) {\r\n        setConnectionState('connecting');\r\n        if (!safeStartRecognition()) {\r\n          setError('Failed to start speech recognition. Please try again.');\r\n          setIsListening(false);\r\n        }\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      cleanupTimeouts();\r\n      safeStopRecognition();\r\n      setRetryCount(0);\r\n      setConnectionState('disconnected');\r\n    };\r\n  }, [isListening, setupRecognition, safeStartRecognition, safeStopRecognition, cleanupTimeouts]);\r\n\r\n  const toggleListening = () => {\r\n    if (!userId) {\r\n      setError('Please log in to use speech recognition');\r\n      return;\r\n    }\r\n    \r\n    if (isListening) {\r\n      cleanup();\r\n      setIsListening(false);\r\n    } else {\r\n      cleanup(); // Clear any existing state\r\n      setIsListening(true);\r\n      setRetryCount(0);\r\n      setConnectionState('connecting');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"speech-to-text\">\r\n      <button\r\n        onClick={toggleListening}\r\n        className={`mic-button ${isListening ? 'active' : ''} ${isProcessing ? 'processing' : ''} ${connectionState}`}\r\n        disabled={isProcessing}\r\n        title={isListening ? 'Stop listening' : 'Start listening'}\r\n      >\r\n        <i className={`fas fa-microphone ${isListening ? 'fa-beat' : ''}`}></i>\r\n        {isListening ? ' Stop' : ' Start'} Listening\r\n        {connectionState === 'connecting' && ' (Connecting...)'}\r\n      </button>\r\n      {transcript && (\r\n        <div className=\"transcript-container\">\r\n          <p className=\"transcript\">\r\n            <span className=\"label\">Transcript:</span> {transcript}\r\n          </p>\r\n        </div>\r\n      )}\r\n      {error && (\r\n        <div className=\"error-container\">\r\n          <p className=\"error\">\r\n            <i className=\"fas fa-exclamation-circle\"></i> {error}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpeechToText;","import React from 'react';\r\nimport { updateLLMPreference } from '../services/api';\r\n\r\nconst LLMPreferenceWidget = ({ currentPreference, onPreferenceChange }) => {\r\n  const handlePreferenceChange = async (event) => {\r\n    const newPreference = event.target.value;\r\n    try {\r\n      await updateLLMPreference(newPreference);\r\n      onPreferenceChange(newPreference);\r\n    } catch (error) {\r\n      console.error('Failed to update LLM preference:', error);\r\n      // Optionally show an error message to the user\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"llm-preference-widget\">\r\n      <h3>AI Model</h3>\r\n      <select\r\n        className=\"llm-select\"\r\n        value={currentPreference}\r\n        onChange={handlePreferenceChange}\r\n        aria-label=\"Select AI Model\"\r\n      >\r\n        <option value=\"gemini\">Gemini (Default)</option>\r\n        <option value=\"ollama\">Ollama (Local)</option>\r\n      </select>\r\n      <div className=\"model-description\">\r\n        {currentPreference === 'gemini' ? (\r\n          <p>Using Google's Gemini model for chat responses (recommended).</p>\r\n        ) : (\r\n          <p>Using local Ollama model for chat responses (requires Ollama server).</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LLMPreferenceWidget; ","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { sendMessage, saveChatHistory, getUserFiles } from '../services/api';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport { v4 as uuidv4 } from 'uuid';\nimport SystemPromptWidget, { availablePrompts, getPromptTextById } from './SystemPromptWidget';\nimport HistoryModal from './HistoryModal';\nimport FileUploadWidget from './FileUploadWidget';\nimport FileManagerWidget from './FileManagerWidget';\nimport SpeechToText from './SpeechToText';\nimport LLMPreferenceWidget from './LLMPreferenceWidget';\nimport './ChatPage.css';\n\nconst ChatPage = ({ setIsAuthenticated }) => {\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [userId, setUserId] = useState('');\n  const [username, setUsername] = useState('');\n  const [currentSystemPromptId, setCurrentSystemPromptId] = useState('friendly');\n  const [editableSystemPromptText, setEditableSystemPromptText] = useState(() => getPromptTextById('friendly'));\n  const [isHistoryModalOpen, setIsHistoryModalOpen] = useState(false);\n  const [fileRefreshTrigger, setFileRefreshTrigger] = useState(0);\n  const [hasFiles, setHasFiles] = useState(false);\n  const [isRagEnabled, setIsRagEnabled] = useState(false);\n  const [llmPreference, setLLMPreference] = useState(() => {\n    const stored = localStorage.getItem('llmPreference');\n    return stored === 'ollama' ? 'ollama' : 'gemini';  // Default to gemini unless explicitly set to ollama\n  });\n\n  const messagesEndRef = useRef(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  useEffect(() => {\n    const storedSessionId = localStorage.getItem('sessionId');\n    const storedUserId = localStorage.getItem('userId');\n    const storedUsername = localStorage.getItem('username');\n\n    if (!storedUserId || !storedSessionId || !storedUsername) {\n      console.warn('ChatPage Mount: Missing auth info in localStorage. Redirecting to login.');\n      handleLogout(true);\n    } else {\n      console.log('ChatPage Mount: Auth info found. Setting state.');\n      setSessionId(storedSessionId);\n      setUserId(storedUserId);\n      setUsername(storedUsername);\n    }\n  }, [handleLogout]);\n\n  useEffect(() => {\n    const checkUserFiles = async () => {\n      const currentUserId = localStorage.getItem('userId');\n      if (!currentUserId) {\n        console.log('User files check skipped: No userId available.');\n        setHasFiles(false);\n        setIsRagEnabled(false);\n        return;\n      }\n      console.log('Checking user files for userId:', currentUserId);\n      try {\n        const response = await getUserFiles();\n        const filesExist = response.data && response.data.length > 0;\n        setHasFiles(filesExist);\n        setIsRagEnabled(filesExist);\n        console.log('User files check successful:', filesExist ? `${response.data.length} files found.` : 'No files found.');\n      } catch (err) {\n        console.error('Error checking user files:', err);\n        if (err.response?.status === 401 && !window.location.pathname.includes('/login')) {\n          console.warn('Received 401 checking files, logging out.');\n          handleLogout(true);\n        } else {\n          setError('Could not check user files.');\n          setHasFiles(false);\n          setIsRagEnabled(false);\n        }\n      }\n    };\n\n    if (userId) {\n      checkUserFiles();\n    }\n  }, [userId, fileRefreshTrigger, handleLogout]);\n\n  const triggerFileRefresh = useCallback(() => setFileRefreshTrigger(prev => prev + 1), []);\n  const handlePromptSelectChange = useCallback((newId) => {\n    setCurrentSystemPromptId(newId);\n    setEditableSystemPromptText(getPromptTextById(newId));\n    setError(prev => prev && (prev.includes('Session invalid') || prev.includes('Critical Error')) ? prev : 'Assistant mode changed.');\n    setTimeout(() => {\n      setError(prev => prev === 'Assistant mode changed.' ? '' : prev);\n    }, 3000);\n  }, []);\n  const handlePromptTextChange = useCallback((newText) => {\n    setEditableSystemPromptText(newText);\n    const matchingPreset = availablePrompts.find(p => p.id !== 'custom' && p.prompt === newText);\n    setCurrentSystemPromptId(matchingPreset ? matchingPreset.id : 'custom');\n  }, []);\n  const handleHistory = useCallback(() => setIsHistoryModalOpen(true), []);\n  const closeHistoryModal = useCallback(() => setIsHistoryModalOpen(false), []);\n\n  const handleLLMPreferenceChange = useCallback((newPreference) => {\n    setLLMPreference(newPreference);\n    localStorage.setItem('llmPreference', newPreference);\n    // Clear messages when switching models to avoid context confusion\n    setMessages([]);\n    setError('AI model changed. Starting a new conversation.');\n    setTimeout(() => setError(''), 3000);\n  }, []);\n\n  const saveAndReset = useCallback(async (isLoggingOut = false, onCompleteCallback = null) => {\n    const currentSessionId = localStorage.getItem('sessionId');\n    const currentUserId = localStorage.getItem('userId');\n    const messagesToSave = [...messages];\n\n    if (!currentSessionId || !currentUserId) {\n      console.error('Save Error: Session ID or User ID missing.');\n      setError('Critical Error: Session info missing.');\n      if (onCompleteCallback) onCompleteCallback();\n      return;\n    }\n    if (isLoading || messagesToSave.length === 0) {\n      if (onCompleteCallback) onCompleteCallback();\n      return;\n    }\n\n    let newSessionId = null;\n    setIsLoading(true);\n    setError(prev => prev && (prev.includes('Session invalid') || prev.includes('Critical Error')) ? prev : '');\n\n    try {\n      console.log(`Saving history for session: ${currentSessionId} (User: ${currentUserId})`);\n      const response = await saveChatHistory({ sessionId: currentSessionId, messages: messagesToSave });\n      newSessionId = response.data.newSessionId;\n      if (!newSessionId) throw new Error('Backend failed to provide new session ID.');\n\n      localStorage.setItem('sessionId', newSessionId);\n      setSessionId(newSessionId);\n      setMessages([]);\n      if (!isLoggingOut) {\n        handlePromptSelectChange('friendly');\n        setError('');\n      }\n      console.log(`History saved. New session ID: ${newSessionId}`);\n    } catch (err) {\n      const failErrorMsg = err.response?.data?.message || err.message || 'Failed to save/reset session.';\n      console.error('Save/Reset Error:', err.response || err);\n      setError(`Session Error: ${failErrorMsg}`);\n      if (err.response?.status === 401 && !isLoggingOut) {\n        console.warn('Received 401 saving history, logging out.');\n        handleLogout(true);\n      } else if (!newSessionId && !isLoggingOut) {\n        newSessionId = uuidv4();\n        localStorage.setItem('sessionId', newSessionId);\n        setSessionId(newSessionId);\n        setMessages([]);\n        handlePromptSelectChange('friendly');\n        console.warn('Save failed, generated new client-side session ID:', newSessionId);\n      } else if (isLoggingOut && !newSessionId) {\n        console.error('Save failed during logout.');\n      }\n    } finally {\n      setIsLoading(false);\n      if (onCompleteCallback) onCompleteCallback();\n    }\n  }, [messages, isLoading, handlePromptSelectChange, handleLogout]);\n\n  // Move handleLogout definition above all hooks and callbacks that use it\n  const handleLogout = useCallback((skipSave = false) => {\n    const performCleanup = () => {\n      console.log('Performing logout cleanup...');\n      localStorage.clear();\n      setIsAuthenticated(false);\n      setMessages([]);\n      setSessionId('');\n      setUserId('');\n      setUsername('');\n      setCurrentSystemPromptId('friendly');\n      setEditableSystemPromptText(getPromptTextById('friendly'));\n      setError('');\n      setHasFiles(false);\n      setIsRagEnabled(false);\n      requestAnimationFrame(() => {\n        if (window.location.pathname !== '/login') {\n          navigate('/login', { replace: true });\n        }\n      });\n    };\n    if (!skipSave && messages.length > 0) {\n      saveAndReset(true, performCleanup);\n    } else {\n      performCleanup();\n    }\n  }, [navigate, setIsAuthenticated, saveAndReset, messages.length]);\n\n  const handleNewChat = useCallback(() => {\n    if (!isLoading) {\n      saveAndReset(false);\n    }\n  }, [isLoading, saveAndReset]);\n\n  const handleSendMessage = useCallback(async (e) => {\n    if (e && e.preventDefault) e.preventDefault();\n    if (!inputText.trim() || isLoading) return;\n\n    const userMessage = {\n        id: uuidv4(),\n        text: inputText,\n        sender: 'user',\n        timestamp: new Date().toISOString()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputText('');\n    setIsLoading(true);\n    setError('');\n\n    try {\n        const response = await sendMessage(\n            inputText,\n            sessionId,\n            messages.map(m => ({ role: m.sender, content: m.text })),\n            llmPreference\n        );\n\n        const aiMessage = {\n            id: uuidv4(),\n            text: response.message,\n            sender: 'ai',\n            timestamp: new Date().toISOString()\n        };\n\n        setMessages(prev => [...prev, aiMessage]);\n    } catch (err) {\n        console.error('Error sending message:', err);\n        setError(err.response?.data?.message || 'Failed to send message. Please try again.');\n    } finally {\n        setIsLoading(false);\n    }\n  }, [inputText, isLoading, sessionId, messages, llmPreference, setMessages, setInputText, setIsLoading, setError]);\n\n  const handleEnterKey = useCallback(\n    (e) => {\n      if (e.key === 'Enter' && !e.shiftKey) {\n        e.preventDefault();\n        handleSendMessage();\n      }\n    },\n    [handleSendMessage]\n  );\n\n  const handleRagToggle = (event) => {\n    setIsRagEnabled(event.target.checked);\n  };\n\n  const handleSpeechTranscript = useCallback(\n    async (transcript, response) => {\n      if (!transcript) return;\n      setInputText(transcript);\n      if (response?.chatResponse?.role && response?.chatResponse?.parts?.length > 0) {\n        setMessages(prev => [...prev, response.chatResponse]);\n      }\n      // Automatically send the transcript as a message\n      await handleSendMessage();\n    },\n    [handleSendMessage]\n  );\n\n  const isProcessing = isLoading;\n\n  if (!userId) {\n    return <div className=\"loading-indicator\"><span>Initializing...</span></div>;\n  }\n\n  return (\n    <div className=\"chat-page-container\">\n      <div className=\"sidebar-area\">\n        <LLMPreferenceWidget \n          currentPreference={llmPreference}\n          onPreferenceChange={handleLLMPreferenceChange}\n        />\n        <SystemPromptWidget\n          selectedPromptId={currentSystemPromptId}\n          promptText={editableSystemPromptText}\n          onSelectChange={handlePromptSelectChange}\n          onTextChange={handlePromptTextChange}\n        />\n        <FileUploadWidget onUploadSuccess={triggerFileRefresh} />\n        <FileManagerWidget refreshTrigger={fileRefreshTrigger} />\n        <SpeechToText onTranscript={handleSpeechTranscript} userId={userId} />\n      </div>\n      <div className=\"chat-container\">\n        <header className=\"chat-header\">\n          <h1>Engineering Tutor</h1>\n          <div className=\"header-controls\">\n            <span className=\"username-display\">Hi, {username}!</span>\n            <button onClick={handleHistory} className=\"header-button history-button\" disabled={isProcessing}>\n              History\n            </button>\n            <button onClick={handleNewChat} className=\"header-button newchat-button\" disabled={isProcessing}>\n              New Chat\n            </button>\n            <button onClick={() => handleLogout(false)} className=\"header-button logout-button\" disabled={isProcessing}>\n              Logout\n            </button>\n          </div>\n        </header>\n        <div className=\"messages-area\">\n          {messages.map((msg, index) => {\n            if (!msg?.role || !msg?.parts?.length || !msg.timestamp) {\n              console.warn('Rendering invalid message structure at index', index, msg);\n              return <div key={`error-${index}`} className=\"message-error\">Msg Error</div>;\n            }\n            const messageText = msg.parts[0]?.text || '';\n            return (\n              <div key={`${sessionId}-${index}`} className={`message ${msg.role}`}>\n                <div className=\"message-content\">\n                  <ReactMarkdown remarkPlugins={[remarkGfm]}>{messageText}</ReactMarkdown>\n                </div>\n                <span className=\"message-timestamp\">\n                  {new Date(msg.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                </span>\n              </div>\n            );\n          })}\n          <div ref={messagesEndRef} />\n        </div>\n        {isProcessing && <div className=\"loading-indicator\"><span>{isRagEnabled ? 'Searching documents...' : 'Thinking...'}</span></div>}\n        {!isProcessing && error && <div className=\"error-indicator\">{error}</div>}\n        <footer className=\"input-area\">\n          <textarea\n            value={inputText}\n            onChange={(e) => setInputText(e.target.value)}\n            onKeyDown={handleEnterKey}\n            placeholder=\"Ask your tutor...\"\n            rows=\"1\"\n            disabled={isProcessing}\n            aria-label=\"Chat input\"\n          />\n          <div\n            className=\"rag-toggle-container\"\n            title={!hasFiles ? 'Upload files to enable RAG' : isRagEnabled ? 'Disable RAG' : 'Enable RAG'}\n          >\n            <input\n              type=\"checkbox\"\n              id=\"rag-toggle\"\n              checked={isRagEnabled}\n              onChange={handleRagToggle}\n              disabled={!hasFiles || isProcessing}\n              aria-label=\"Enable RAG\"\n            />\n            <label htmlFor=\"rag-toggle\">RAG</label>\n          </div>\n          <button\n            onClick={handleSendMessage}\n            disabled={isProcessing || !inputText.trim()}\n            title=\"Send Message\"\n            aria-label=\"Send message\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" width=\"20\" height=\"20\">\n              <path d=\"M3.478 2.405a.75.75 0 00-.926.94l2.432 7.905H13.5a.75.75 0 010 1.5H4.984l-2.432 7.905a.75.75 0 00.926.94 60.519 60.519 0 0018.445-8.986.75.75 0 000-1.218A60.517 60.517 0 003.478 2.405z\" />\n            </svg>\n          </button>\n        </footer>\n      </div>\n      <HistoryModal isOpen={isHistoryModalOpen} onClose={closeHistoryModal} />\n    </div>\n  );\n};\n\nexport default ChatPage;"],"names":["API_BASE_URL","getApiBaseUrl","backendPort","process","REACT_APP_BACKEND_PORT","hostname","window","location","protocol","backendHost","concat","console","log","api","axios","create","baseURL","interceptors","request","use","config","userId","localStorage","getItem","headers","url","includes","warn","href","Promise","reject","Error","data","FormData","error","response","status","removeItem","pathname","signupUser","userData","post","signinUser","sendMessage","async","message","sessionId","messageHistory","llmPreference","saveChatHistory","historyData","getChatSessions","get","getSessionDetails","uploadFile","formData","getUserFiles","renameUserFile","serverFilename","newOriginalName","patch","deleteUserFile","delete","updateLLMPreference","preference","availablePrompts","id","title","prompt","getPromptTextById","find","p","styleTagPromptId","document","getElementById","styleTag","createElement","type","innerText","head","appendChild","_ref","selectedPromptId","promptText","onSelectChange","onTextChange","_jsxs","className","children","_jsx","value","onChange","event","newId","target","filter","map","htmlFor","rows","maxLength","placeholder","isOpen","onClose","sessions","setSessions","useState","selectedSession","setSelectedSession","isLoadingSessions","setIsLoadingSessions","isLoadingDetails","setIsLoadingDetails","setError","useEffect","err","_err$response","_err$response$data","_err$response2","fetchSessions","handleSelectSession","_err$response3","_err$response3$data","_err$response4","formatDate","dateString","date","Date","isNaN","getTime","toLocaleString","undefined","dateStyle","timeStyle","e","onClick","stopPropagation","length","session","tabIndex","onKeyDown","key","role","preview","updatedAt","createdAt","messageCount","messages","msg","index","_msg$parts","_msg$parts$","parts","ReactMarkdown","text","timestamp","onUploadSuccess","selectedFile","setSelectedFile","uploadStatus","setUploadStatus","statusMessage","setStatusMessage","fileInputRef","useRef","allowedFileTypesString","ref","file","files","fileExt","name","split","pop","toLowerCase","current","MAX_SIZE_MB","MAX_SIZE_BYTES","size","accept","style","display","triggerFileInput","_fileInputRef$current","click","disabled","append","setTimeout","prevStatus","prevMsg","getFileIcon","formatFileSize","bytes","sizes","i","Math","floor","max","min","parseFloat","pow","toFixed","styleTagFileManagerId","refreshTrigger","userFiles","setUserFiles","isLoading","setIsLoading","renamingFile","setRenamingFile","newName","setNewName","fetchUserFiles","useCallback","handleRenameCancel","handleRenameSave","trim","handleRenameInputKeyDown","autoFocus","originalName","_Fragment","handleRenameClick","confirm","_err$response5","_err$response5$data","_err$response6","handleDeleteFile","onTranscript","isListening","setIsListening","transcript","setTranscript","isProcessing","setIsProcessing","retryCount","setRetryCount","isRecognitionActive","setIsRecognitionActive","connectionState","setConnectionState","recognitionRef","retryTimeoutRef","abortCountRef","isComponentMounted","setupRecognition","SpeechRecognition","webkitSpeechRecognition","cleanup","recognition","continuous","interimResults","lang","onstart","onresult","interimTranscript","finalTranscript","resultIndex","results","transcriptPart","isFinal","timeout","code","onerror","errorMessage","shouldRetry","retryDelay","prev","cleanupTimeouts","safeStartRecognition","onend","clearTimeout","stop","safeStopRecognition","start","toggleListening","currentPreference","onPreferenceChange","newPreference","setIsAuthenticated","setMessages","inputText","setInputText","setSessionId","setUserId","username","setUsername","currentSystemPromptId","setCurrentSystemPromptId","editableSystemPromptText","setEditableSystemPromptText","isHistoryModalOpen","setIsHistoryModalOpen","fileRefreshTrigger","setFileRefreshTrigger","hasFiles","setHasFiles","isRagEnabled","setIsRagEnabled","setLLMPreference","messagesEndRef","navigate","useNavigate","_messagesEndRef$curre","scrollIntoView","behavior","storedSessionId","storedUserId","storedUsername","handleLogout","currentUserId","filesExist","checkUserFiles","triggerFileRefresh","handlePromptSelectChange","handlePromptTextChange","newText","matchingPreset","handleHistory","closeHistoryModal","handleLLMPreferenceChange","setItem","saveAndReset","isLoggingOut","arguments","onCompleteCallback","currentSessionId","messagesToSave","newSessionId","_err$response2$data","failErrorMsg","uuidv4","performCleanup","clear","requestAnimationFrame","replace","handleNewChat","handleSendMessage","preventDefault","userMessage","sender","toISOString","m","content","aiMessage","_err$response4$data","handleEnterKey","shiftKey","handleSpeechTranscript","_response$chatRespons","_response$chatRespons2","_response$chatRespons3","chatResponse","LLMPreferenceWidget","SystemPromptWidget","FileUploadWidget","FileManagerWidget","SpeechToText","messageText","remarkPlugins","remarkGfm","toLocaleTimeString","hour","minute","checked","xmlns","viewBox","fill","width","height","d","HistoryModal"],"sourceRoot":""}